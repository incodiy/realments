<?php
namespace Incodiy\Realments\Traits;

trait RealmentsForm
{
    protected $fields = [];
    protected $formAttributes = [];

    public function open($attrs = [])
    {
        $this->formAttributes = $attrs;
        return $this;
    }

    public function close()
    {
        return '<script>window.realmentsData = ' . json_encode([
            'action' => $this->formAttributes['action'] ?? '',
            'method' => $this->formAttributes['method'] ?? 'POST',
            'fields' => $this->fields,
            'errors' => $this->formAttributes['errors'] ?? [],
            'classes' => $this->formAttributes['classes'] ?? [
                'input' => 'border border-gray-300 p-2 rounded w-full',
                'label' => 'block font-medium mb-1',
                'error' => 'text-red-600 text-sm mt-1',
                'button' => 'bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded'
            ]
        ]) . ';</script><div id="realmentsForm"></div>';
    }

    protected function addField($type, $name, $attrs = [])
    {
        $attrs['type'] = $type;
        $attrs['name'] = $name;

        if (isset($attrs['addable'])) {
            $attrs['add'] = $attrs['addable'];
            unset($attrs['addable']);
        }

        $this->fields[] = $attrs;
    }

    public function getFields()
    {
        return $this->fields;
    }

    public function text($name, $attrs = [])
    {
        $this->addField('text', $name, $attrs);
        return $this;
    }

    public function email($name, $attrs = [])
    {
        $this->addField('email', $name, $attrs);
        return $this;
    }

    public function password($name, $attrs = [])
    {
        $this->addField('password', $name, $attrs);
        return $this;
    }

    public function number($name, $attrs = [])
    {
        $this->addField('number', $name, $attrs);
        return $this;
    }

    public function date($name, $attrs = [])
    {
        $this->addField('date', $name, $attrs);
        return $this;
    }

    public function textarea($name, $attrs = [])
    {
        $this->addField('textarea', $name, $attrs);
        return $this;
    }

    public function select($name, $attrs = [])
    {
        $this->addField('select', $name, $attrs);
        return $this;
    }

    public function file($name, $attrs = [])
    {
        $this->addField('file', $name, $attrs);
        return $this;
    }

    public function checkbox($name, $attrs = [])
    {
        $this->addField('checkbox', $name, $attrs);
        return $this;
    }

    public function radio($name, $attrs = [])
    {
        $this->addField('radio', $name, $attrs);
        return $this;
    }

    public function setFormAttributes($attrs = [])
    {
        $this->formAttributes = $attrs;
    }

    public function getFormAttributes()
    {
        return $this->formAttributes;
    }
}
